{
    "appid": "21834fdf-826d-4595-a036-d7b8841ab798",
    "name": "Cisco Secure Firewall",
    "description": "This app interfaces with Cisco Firepower devices to add, update and delete network objects, network object groups, access policies and access rules",
    "publisher": "Splunk",
    "package_name": "phantom_ciscosecurefirewall",
    "type": "firewall",
    "license": "Copyright (c) 2024 Splunk Inc.",
    "main_module": "ciscosecurefirewall_connector.py",
    "app_version": "1.0.0",
    "utctime_updated": "2024-12-04T23:13:40.000000Z",
    "product_vendor": "Cisco Systems",
    "product_name": "Cisco Secure Firewall",
    "product_version_regex": ".*",
    "min_phantom_version": "6.3.0",
    "python_version": "3",
    "logo": "logo_cisco.svg",
    "logo_dark": "logo_cisco_dark.svg",
    "fips_compliant": true,
    "latest_tested_versions": [
        "Firepower Management Center 7.6.0"
    ],
    "configuration": {
        "fmc_type": {
            "description": "Would you like to connect to an on-prem or cloud delivered FMC",
            "order": 0,
            "data_type": "string",
            "value_list": [
                "On-prem",
                "Cloud"
             ],
            "required": true
        },
        "firepower_host": {
            "description": "Device IP/Hostname of your on-prem FMC",
            "order": 1,
            "data_type": "string"
        },
        "verify_server_cert": {
            "description": "Verify server certificate",
            "data_type": "boolean",
            "order": 1
        },
        "username": {
            "description": "User with access to the on-prem FMC node",
            "data_type": "string",
            "order": 2
        },
        "password": {
            "description": "Password for the on-prem FMC node",
            "data_type": "password",
            "order": 3
        },
        "domain_name": {
            "description": "Default firepower domain",
            "data_type": "string",
            "order": 4
        },
        "cloud_api_key": {
            "description": "Api key for cloud delivered FMC",
            "data_type": "string",
            "order": 5
        },
        "region": {
            "description": "Region your Cisco Security Cloud Control is deployed in",
            "data_type": "string",
            "value_list": [
                "US",
                "EU",
                "APJ",
                "AUS",
                "IN"
             ],
            "order": 6
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "description": "Validate the asset configuration for connectivity",
            "type": "test",
            "identifier": "test_connectivity",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "list network objects",
            "description": "List network object in FMC",
            "type": "investigate",
            "read_only": true,
            "identifier": "list_network_ojects",
            "parameters":{
                "name": {
                    "description": "Network object name to filter results by",
                    "data_type": "string",
                    "order": 0
                },
                "type": {
                    "description": "Network object type to filter results by",
                    "data_type": "string",
                    "value_list": [
                       "Host",
                       "Network",
                       "Range",
                       "FQDN"
                    ],
                    "order": 1
                },
                "domain_name": {
                    "description": "Firepower Domain. If none is specified the default domain will be queried",
                    "data_type": "string",
                    "order": 2
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.type",
                    "data_type": "string",
                    "example_values": [
                        "Network"
                    ]
                },
                {
                    "data_path": "action_result.parameter.domain_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.type",
                    "data_type": "string",
                    "example_values": [
                        "Network"
                    ]
                },
                {
                    "data_path": "action_result.data.*.links.self",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.links.parent",
                    "data_type": "string"
                }
            ],
            "versions": "EQ(*)" 
        },
        {
            "action": "create network object",
            "description": "Creates a network object in FMC",
            "type": "generic",
            "identifier": "create_network_object",
            "read_only": false,
            "parameters":{
                "name": {
                    "description": "Network object name",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                },
                "type": {
                    "description": "Network object type",
                    "data_type": "string",
                    "required": true,
                    "value_list": [
                       "Host",
                       "Network",
                       "Range",
                       "FQDN"
                    ],
                    "order": 1
                },
                "value": {
                    "description": "Value of the network object. If type if Range specify value in the following format: ip1-ip2",
                    "data_type": "string",
                    "required": true,
                    "order": 2
                },
                "domain_name": {
                    "description": "Firepower Domain. If none is specified the default domain will be queried",
                    "data_type": "string",
                    "order": 3
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.type",
                    "data_type": "string",
                    "example_values": [
                        "Network"
                    ]
                },
                {
                    "data_path": "action_result.parameter.value",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.domain_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.type",
                    "data_type": "string",
                    "example_values": [
                        "Network"
                    ]
                },
                {
                    "data_path": "action_result.data.*.links.self",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.links.parent",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.value",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.ipType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.lastUser.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.timestamp",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.parentType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.overridable",
                    "data_type": "boolean"
                }
            ],
            "versions": "EQ(*)" 
        },
        {
            "action": "update network object",
            "description": "Updates a network object in FMC",
            "type": "generic",
            "identifier": "update_network_object",
            "read_only": false,
            "parameters":{
                "object_id": {
                    "description": "Network object id",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                },
                "name": {
                    "description": "Network object name",
                    "data_type": "string",
                    "order": 1
                },
                "type": {
                    "description": "Network object type. Note this cannot change and is only used to identify the network object value you'd liek to update.",
                    "data_type": "string",
                    "value_list": [
                       "Host",
                       "Network",
                       "Range",
                       "FQDN"
                    ],
                    "order": 2
                },
                "value": {
                    "description": "Value of the network object. If type is Range specify value in the following format: ip1-ip2",
                    "data_type": "string",
                    "order": 3
                },
                "domain_name": {
                    "description": "Firepower Domain. If none is specified the default domain will be queried",
                    "data_type": "string",
                    "order": 4
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.object_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.type",
                    "data_type": "string",
                    "example_values": [
                        "Network"
                    ]
                },
                {
                    "data_path": "action_result.parameter.value",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.domain_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.type",
                    "data_type": "string",
                    "example_values": [
                        "Network"
                    ]
                },
                {
                    "data_path": "action_result.data.*.links.self",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.links.parent",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.value",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.ipType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.lastUser.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.timestamp",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.parentType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.overridable",
                    "data_type": "boolean"
                }
            ],
            "versions": "EQ(*)" 
        },

        {
            "action": "delete network object",
            "description": "Deletes a network object in FMC",
            "type": "generic",
            "read_only": false,
            "identifier": "delete_network_object",
            "parameters":{
                "object_id": {
                    "description": "Network object id",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                },
                "type": {
                    "description": "Network object type",
                    "data_type": "string",
                    "required": true,
                    "value_list": [
                       "Host",
                       "Network",
                       "Range",
                       "FQDN"
                    ],
                    "order": 1
                },
                "domain_name": {
                    "description": "Firepower Domain. If none is specified the default domain will be queried",
                    "data_type": "string",
                    "order": 2
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.object_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.type",
                    "data_type": "string",
                    "example_values": [
                        "Network"
                    ]
                },
                {
                    "data_path": "action_result.parameter.domain_name",
                    "data_type": "string"
                }
            ],
            "versions": "EQ(*)" 
        },
        {
            "action": "get network group objects",
            "description": "Gets all network group objects in FMC host or a specfic network group",
            "type": "investigate",
            "identifier": "get_network_groups",
            "read_only": true,
            "parameters": {
                "group_name": {
                    "description": "Group name to retrieve from FMC",
                    "data_type": "string",
                    "order": 0
                },
                "domain_name": {
                    "description": "Firepower Domain. If none is specified the default domain will be queried",
                    "data_type": "string",
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.group_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.domain_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.uuid",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.name",
                    "data_type": "string"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "create network group object",
            "description": "Create a network group object",
            "type": "generic",
            "read_only": false,
            "identifier": "create_network_group",
            "parameters": {
                "name": {
                    "description": "Name of the network group",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                },
                "network_object_ids": {
                    "description": "Network objects attached to the group. Note these ids must already exist in FMC",
                    "data_type": "string",
                    "example_values": [
                        "b2df29e8-5e6f-4c5d-9d5e-3fa9b3c9467b, a1c2f7d9-4b5e-42b1-8d9f-2f6b4a8e5e3c"
                    ],
                    "required": true,
                    "order": 1
                },
                "domain_name": {
                    "description": "Firepower Domain. If none is specified the default domain will be queried",
                    "data_type": "string",
                    "order": 2
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.network_object_ids",
                    "data_type": "string",
                    "example_values": [
                        "b2df29e8-5e6f-4c5d-9d5e-3fa9b3c9467b, a1c2f7d9-4b5e-42b1-8d9f-2f6b4a8e5e3c"
                    ]
                },
                {
                    "data_path": "action_result.parameter.domain_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.type",
                    "data_type": "string",
                    "example_values": [
                        "NetworkGroup"
                    ]
                },
                {
                    "data_path": "action_result.data.*.links.self",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.objects.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.objects.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.objects.type",
                    "data_type": "string",
                    "example_values": [
                        "Network"
                    ]
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.lastUser.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.timestamp",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.parentType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.overridable",
                    "data_type": "boolean"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "update network group object",
            "description": "Update a network group object",
            "type": "generic",
            "read_only": false,
            "identifier": "update_network_group",
            "parameters": {
                "network_group_id": {
                    "description": "Network group to update",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                },
                "name": {
                    "description": "Name of the network group",
                    "data_type": "string",
                    "order": 1
                },
                "network_object_ids_to_add": {
                    "description": "Network objects to add to the group. Note these ids must already exist in FMC",
                    "data_type": "string",
                    "example_values": [
                        "b2df29e8-5e6f-4c5d-9d5e-3fa9b3c9467b, a1c2f7d9-4b5e-42b1-8d9f-2f6b4a8e5e3c"
                    ],
                    "order": 2
                },
                "network_object_ids_to_remove": {
                    "description": "Network objects to remove frin the group.",
                    "data_type": "string",
                    "example_values": [
                        "b2df29e8-5e6f-4c5d-9d5e-3fa9b3c9467b, a1c2f7d9-4b5e-42b1-8d9f-2f6b4a8e5e3c"
                    ],
                    "order": 3
                },
                "domain_name": {
                    "description": "Firepower Domain. If none is specified the default domain will be queried",
                    "data_type": "string",
                    "order": 4
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.network_group_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.network_object_ids_to_add",
                    "data_type": "string",
                    "example_values": [
                        "b2df29e8-5e6f-4c5d-9d5e-3fa9b3c9467b, a1c2f7d9-4b5e-42b1-8d9f-2f6b4a8e5e3c"
                    ]
                },
                {
                    "data_path": "action_result.parameter.network_object_ids_to_remove",
                    "data_type": "string",
                    "example_values": [
                        "b2df29e8-5e6f-4c5d-9d5e-3fa9b3c9467b, a1c2f7d9-4b5e-42b1-8d9f-2f6b4a8e5e3c"
                    ]
                },
                {
                    "data_path": "action_result.parameter.domain_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.type",
                    "data_type": "string",
                    "example_values": [
                        "NetworkGroup"
                    ]
                },
                {
                    "data_path": "action_result.data.*.links.self",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.objects.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.objects.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.objects.type",
                    "data_type": "string",
                    "example_values": [
                        "Network"
                    ]
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.lastUser.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.timestamp",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.parentType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.overridable",
                    "data_type": "boolean"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "delete network group object",
            "description": "Delete a network group object",
            "type": "generic",
            "read_only": false,
            "identifier": "delete_network_group",
            "parameters": {
                "network_group_id": {
                    "description": "Network group to update",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                },
                "domain_name": {
                    "description": "Firepower Domain. If none is specified the default domain will be queried",
                    "data_type": "string",
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.network_group_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.domain_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.type",
                    "data_type": "string",
                    "example_values": [
                        "NetworkGroup"
                    ]
                },
                {
                    "data_path": "action_result.data.*.links.self",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.objects.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.objects.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.objects.type",
                    "data_type": "string",
                    "example_values": [
                        "Network"
                    ]
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.lastUser.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.timestamp",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.parentType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.overridable",
                    "data_type": "boolean"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "get access control policies",
            "description": "Gets all access control polcies in the FMC host for a particular domain",
            "type": "investigate",
            "identifier": "get_access_policies",
            "read_only": true,
            "parameters": {
                "domain_name": {
                    "description": "Firepower Domain. If none is specified the default domain will be queried",
                    "data_type": "string",
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.domain_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.name",
                    "data_type": "string",
                    "example_values": [
                        "new-policy"
                    ]
                },
                {
                    "data_path": "action_result.data.*.policy_id",
                    "data_type": "string",
                    "example_values": [
                        "00000000-0000-0ed3-0000-012884902138"
                    ]
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "create access control policy",
            "description": "Create an access control policy",
            "type": "generic",
            "read_only": false,
            "identifier": "create_access_policy",
            "parameters": {
                "name": {
                    "description": "Name of the network group",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                },
                "description": {
                    "description": "Description of the policy",
                    "data_type": "string",
                    "order": 1
                },
                "action": {
                    "description": "Type of action to take on matching traffic",
                    "data_type": "string",
                    "required": true,
                    "value_list": [
                       "ALLOW",
                       "BLOCK",
                       "TRUST",
                       "MONITOR"
                    ],
                    "order": 2
                },
                "domain_name": {
                    "description": "Firepower Domain. If none is specified the default domain will be queried",
                    "data_type": "string",
                    "order": 3
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.action",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.domain_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.name",
                    "data_type": "string",
                    "example_values": [
                        "new-policy"
                    ]
                },
                {
                    "data_path": "action_result.data.*.type",
                    "data_type": "string",
                    "example_values": [
                        "AccessPolicy"
                    ]
                },
                {
                    "data_path": "action_result.data.*.links.self",
                    "data_type": "string",
                    "example_values": [
                        "AccessPolicy"
                    ]
                },
                {
                    "data_path": "action_result.data.*.rules.type",
                    "data_type": "string",
                    "example_values": [
                        "AccessRule"
                    ]
                },
                {
                    "data_path": "action_result.data.*.rules.links.self",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.description",
                    "data_type": "string"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "update access control policy",
            "description": "Update an access control policy",
            "type": "generic",
            "read_only": false,
            "identifier": "update_access_policy",
            "parameters": {
                "policy_id": {
                    "description": "Id of the policy to update",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                },
                "name": {
                    "description": "Name of the network group",
                    "data_type": "string",
                    "order": 1
                },
                "description": {
                    "description": "Description of the policy",
                    "data_type": "string",
                    "order": 2
                },
                "action": {
                    "description": "Type of action to take on matching traffic",
                    "data_type": "string",
                    "value_list": [
                       "ALLOW",
                       "BLOCK",
                       "TRUST",
                       "MONITOR"
                    ],
                    "order": 3
                },
                "domain_name": {
                    "description": "Firepower Domain. If none is specified the default domain will be queried",
                    "data_type": "string",
                    "order": 4
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.policy_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.action",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.domain_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.name",
                    "data_type": "string",
                    "example_values": [
                        "new-policy"
                    ]
                },
                {
                    "data_path": "action_result.data.*.type",
                    "data_type": "string",
                    "example_values": [
                        "AccessPolicy"
                    ]
                },
                {
                    "data_path": "action_result.data.*.links.self",
                    "data_type": "string",
                    "example_values": [
                        "AccessPolicy"
                    ]
                },
                {
                    "data_path": "action_result.data.*.rules.type",
                    "data_type": "string",
                    "example_values": [
                        "AccessRule"
                    ]
                },
                {
                    "data_path": "action_result.data.*.rules.links.self",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.defaultAction.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.defaultAction.type",
                    "data_type": "string",
                    "example_values": [
                        "AccessPolicyDefaultAction"
                    ]
                },
                {
                    "data_path": "action_result.data.*.defaultAction.action",
                    "data_type": "string",
                    "example_values": [
                        "BLOCK"
                    ]
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "delete access control policies",
            "description": "Deleted the specified access control policy",
            "type": "generic",
            "identifier": "delete_access_policy",
            "read_only": false,
            "parameters": {
                "policy_id": {
                    "description": "Id of the policy to delete",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                },
                "domain_name": {
                    "description": "Firepower Domain. If none is specified the default domain will be queried",
                    "data_type": "string",
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.policy_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.action",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.domain_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.name",
                    "data_type": "string",
                    "example_values": [
                        "new-policy"
                    ]
                },
                {
                    "data_path": "action_result.data.*.type",
                    "data_type": "string",
                    "example_values": [
                        "AccessPolicy"
                    ]
                },
                {
                    "data_path": "action_result.data.*.links.self",
                    "data_type": "string",
                    "example_values": [
                        "AccessPolicy"
                    ]
                },
                {
                    "data_path": "action_result.data.*.rules.type",
                    "data_type": "string",
                    "example_values": [
                        "AccessRule"
                    ]
                },
                {
                    "data_path": "action_result.data.*.rules.links.self",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.defaultAction.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.defaultAction.type",
                    "data_type": "string",
                    "example_values": [
                        "AccessPolicyDefaultAction"
                    ]
                },
                {
                    "data_path": "action_result.data.*.defaultAction.action",
                    "data_type": "string",
                    "example_values": [
                        "BLOCK"
                    ]
                },
                {
                    "data_path": "action_result.data.*.securityIntelligence.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.securityIntelligence.type",
                    "data_type": "string",
                    "example_values": [
                        "SecurityIntelligencePolicy"
                    ]
                },
                {
                    "data_path": "action_result.data.*.securityIntelligence.links.self",
                    "data_type": "string"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "get access control rules",
            "description": "Gets all access control rules associated with a particular access control policy",
            "type": "investigate",
            "identifier": "get_access_rules",
            "read_only": true,
            "parameters": {
                "policy_id": {
                    "description": "Access control policy that the rule is apart of",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                },
                "rule_id": {
                    "description": "Id of the rules",
                    "data_type": "string",
                    "order": 1
                },
                "domain_name": {
                    "description": "Firepower Domain. If none is specified the default domain will be queried",
                    "data_type": "string",
                    "order": 2
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.policy_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.domain_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.name",
                    "data_type": "string",
                    "example_values": [
                        "new-policy"
                    ]
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "create access control rule",
            "description": "Creates an access control rule associated with a particular access control policy",
            "type": "generic",
            "identifier": "create_access_rules",
            "read_only": false,
            "parameters": {
                "policy_id": {
                    "description": "Access control policy the rule will be apart of",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                },
                "name": {
                    "description": "Name of the access control rule",
                    "required": true,
                    "data_type": "string",
                    "order": 1
                },
                "action": {
                    "description": "Type of action to take on matching traffic",
                    "data_type": "string",
                    "required": true,
                    "value_list": [
                        "ALLOW",
                        "BLOCK",
                        "TRUST",
                        "MONITOR"
                     ],
                    "order": 2
                },
                "enabled": {
                    "data_type": "boolean",
                    "description": "Wether the rule is enabled",
                    "order": 3,
                    "default": false
                },
                "source_networks": {
                    "description": "Network groups or objects to determine what action to take against traffic based on where it originated from",
                    "data_type": "string",
                    "order": 4
                },
                "destination_networks": {
                    "description": "Network groups or objects to determine what action to take against traffic based on its intended destination",
                    "data_type": "string",
                    "order": 5
                },
                "domain_name": {
                    "description": "Firepower Domain. If none is specified the default domain will be queried",
                    "data_type": "string",
                    "order": 6
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.policy_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.action",
                    "data_type": "string",
                    "example_values": [
                        "BLOCK"
                    ]
                },
                {
                    "data_path": "action_result.parameter.enabled",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.parameter.source_networks",
                    "data_type": "string",
                    "example_values": [
                        "00000000-0000-0ed3-0000-012884902229, 00000000-0000-0ed3-0000-012884902491"
                    ]
                },
                {
                    "data_path": "action_result.parameter.destination_networks",
                    "data_type": "string",
                    "example_values": [
                        "00000000-0000-0ed3-0000-012884902229, 00000000-0000-0ed3-0000-012884902491"
                    ]
                },
                {
                    "data_path": "action_result.parameter.domain_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.type",
                    "data_type": "string",
                    "example_values": [
                        "AccessRule"
                    ]
                },
                {
                    "data_path": "action_result.data.*.links.self",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.action",
                    "data_type": "string",
                    "example_values": [
                        "BLOCK"
                    ]
                },
                {
                    "data_path": "action_result.data.*.logEnd",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.enabled",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.logBegin",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.logFiles",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.metadata.accessPolicy.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.accessPolicy.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.accessPolicy.type",
                    "data_type": "string",
                    "example_values": [
                        "AccessPolicy"
                    ]
                },
                {
                    "data_path": "action_result.data.*.variableSet.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.variableSet.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.variableSet.type",
                    "data_type": "string",
                    "example_values": [
                        "VariableSet"
                    ]
                },
                {
                    "data_path": "action_result.data.*.sourceNetworks.objects.*.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.sourceNetworks.objects.*.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.sourceNetworks.objects.*.type",
                    "data_type": "string",
                    "example_values": [
                        "NetworkGroup", "Network"
                    ]
                },
                {
                    "data_path": "action_result.data.*.sourceNetworks.objects.*.overridable",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.sendEventsToFMC",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.destinationNetworks.objects.*.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destinationNetworks.objects.*.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destinationNetworks.objects.*.type",
                    "data_type": "string",
                    "example_values": [
                        "NetworkGroup", "Network"
                    ]
                },
                {
                    "data_path": "action_result.data.*.destinationNetworks.objects.*.overridable",
                    "data_type": "boolean"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "update access control rule",
            "description": "Updates an access control rule associated with a particular access control policy",
            "type": "generic",
            "identifier": "update_access_rule",
            "read_only": false,
            "parameters": {
                "rule_id": {
                    "description": "Access control rule to update",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                },
                "policy_id": {
                    "description": "Access control policy that the rule is apart of",
                    "data_type": "string",
                    "required": true,
                    "order": 1
                },
                "name": {
                    "description": "Name of the access control rule",
                    "data_type": "string",
                    "order": 2
                },
                "action": {
                    "description": "Type of action to take on matching traffic",
                    "data_type": "string",
                    "value_list": [
                        "ALLOW",
                        "BLOCK",
                        "TRUST",
                        "MONITOR"
                     ],
                    "order": 3
                },
                "enabled": {
                    "data_type": "boolean",
                    "description": "Wether the rule is enabled",
                    "order": 4
                },
                "source_networks_to_add": {
                    "description": "Add these network groups or objects to the rules source networks",
                    "data_type": "string",
                    "order": 5
                },
                "source_networks_to_remove": {
                    "description": "Remove these network groups or objects from the rules source networks",
                    "data_type": "string",
                    "order": 6
                },
                "destination_networks_to_add": {
                    "description": "Add these network groups or objects to the rules destination networks",
                    "data_type": "string",
                    "order": 7
                },
                "destination_networks_to_remove": {
                    "description": "Remove these network groups or objects from the rules destination networks",
                    "data_type": "string",
                    "order": 8
                },
                "domain_name": {
                    "description": "Firepower Domain. If none is specified the default domain will be queried",
                    "data_type": "string",
                    "order": 9
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.rule_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.policy_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.action",
                    "data_type": "string",
                    "example_values": [
                        "BLOCK"
                    ]
                },
                {
                    "data_path": "action_result.parameter.enabled",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.parameter.source_networks_to_add",
                    "data_type": "string",
                    "example_values": [
                        "00000000-0000-0ed3-0000-012884902229, 00000000-0000-0ed3-0000-012884902491"
                    ]
                },
                {
                    "data_path": "action_result.parameter.source_networks_to_remove",
                    "data_type": "string",
                    "example_values": [
                        "00000000-0000-0ed3-0000-012884902229, 00000000-0000-0ed3-0000-012884902491"
                    ]
                },
                {
                    "data_path": "action_result.parameter.destination_networks_to_add",
                    "data_type": "string",
                    "example_values": [
                        "00000000-0000-0ed3-0000-012884902229, 00000000-0000-0ed3-0000-012884902491"
                    ]
                },
                {
                    "data_path": "action_result.parameter.destination_networks_to_remove",
                    "data_type": "string",
                    "example_values": [
                        "00000000-0000-0ed3-0000-012884902229, 00000000-0000-0ed3-0000-012884902491"
                    ]
                },
                {
                    "data_path": "action_result.parameter.domain_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.type",
                    "data_type": "string",
                    "example_values": [
                        "AccessRule"
                    ]
                },
                {
                    "data_path": "action_result.data.*.links.self",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.action",
                    "data_type": "string",
                    "example_values": [
                        "BLOCK"
                    ]
                },
                {
                    "data_path": "action_result.data.*.logEnd",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.enabled",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.logBegin",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.logFiles",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.name",
                    "data_type": "string",
                    "example_values": [
                        "Global"
                    ]
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.type",
                    "data_type": "string",
                    "example_values": [
                        "Domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.metadata.accessPolicy.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.accessPolicy.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.accessPolicy.type",
                    "data_type": "string",
                    "example_values": [
                        "AccessPolicy"
                    ]
                },
                {
                    "data_path": "action_result.data.*.variableSet.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.variableSet.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.variableSet.type",
                    "data_type": "string",
                    "example_values": [
                        "VariableSet"
                    ]
                },
                {
                    "data_path": "action_result.data.*.sourceNetworks.objects.*.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.sourceNetworks.objects.*.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.sourceNetworks.objects.*.type",
                    "data_type": "string",
                    "example_values": [
                        "NetworkGroup", "Network"
                    ]
                },
                {
                    "data_path": "action_result.data.*.sourceNetworks.objects.*.overridable",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.sendEventsToFMC",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.destinationNetworks.objects.*.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destinationNetworks.objects.*.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destinationNetworks.objects.*.type",
                    "data_type": "string",
                    "example_values": [
                        "NetworkGroup", "Network"
                    ]
                },
                {
                    "data_path": "action_result.data.*.destinationNetworks.objects.*.overridable",
                    "data_type": "boolean"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "delete access control rules",
            "description": "Deletes access control rule associated with a particular access control policy",
            "type": "generic",
            "identifier": "delete_access_rule",
            "read_only": false,
            "parameters": {
                "rule_id": {
                    "description": "Access control rule to delete",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                },
                "policy_id": {
                    "description": "Access control policy that the rule is apart of",
                    "data_type": "string",
                    "required": true,
                    "order": 1
                },
                "domain_name": {
                    "description": "Firepower Domain. If none is specified the default domain will be queried",
                    "data_type": "string",
                    "order": 2
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.rule_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.policy_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.domain_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.type",
                    "data_type": "string",
                    "example_values": [
                        "AccessRule"
                    ]
                },
                {
                    "data_path": "action_result.data.*.links.self",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.action",
                    "data_type": "string",
                    "example_values": [
                        "BLOCK"
                    ]
                },
                {
                    "data_path": "action_result.data.*.logEnd",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.enabled",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.logBegin",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.logFiles",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.name",
                    "data_type": "string",
                    "example_values": [
                        "Global"
                    ]
                },
                {
                    "data_path": "action_result.data.*.metadata.domain.type",
                    "data_type": "string",
                    "example_values": [
                        "Domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.metadata.accessPolicy.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.accessPolicy.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.accessPolicy.type",
                    "data_type": "string",
                    "example_values": [
                        "AccessPolicy"
                    ]
                },
                {
                    "data_path": "action_result.data.*.variableSet.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.variableSet.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.variableSet.type",
                    "data_type": "string",
                    "example_values": [
                        "VariableSet"
                    ]
                },
                {
                    "data_path": "action_result.data.*.sourceNetworks.objects.*.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.sourceNetworks.objects.*.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.sourceNetworks.objects.*.type",
                    "data_type": "string",
                    "example_values": [
                        "NetworkGroup", "Network"
                    ]
                },
                {
                    "data_path": "action_result.data.*.sourceNetworks.objects.*.overridable",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.sendEventsToFMC",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.destinationNetworks.objects.*.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destinationNetworks.objects.*.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.destinationNetworks.objects.*.type",
                    "data_type": "string",
                    "example_values": [
                        "NetworkGroup", "Network"
                    ]
                },
                {
                    "data_path": "action_result.data.*.destinationNetworks.objects.*.overridable",
                    "data_type": "boolean"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "list devices",
            "description": "Lists all devices belonging to a particular domain/tenant",
            "type": "investigate",
            "identifier": "list_devices",
            "read_only": true,
            "parameters": {
                "domain_name": {
                    "description": "Firepower Domain. If none is specified the default domain will be queried",
                    "data_type": "string",
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.domain_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.links.self",
                    "data_type": "string"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "get deployable devices",
            "description": "List all devices with configuration chnges that are ready to be deployed",
            "type": "investigate",
            "identifier": "get_deployable_devices",
            "read_only": true,
            "parameters": {
                "domain_name": {
                    "description": "Firepower Domain. If none is specified the default domain will be queried",
                    "data_type": "string",
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.domain_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.type",
                    "data_type": "string",
                    "example_values": [
                        "SENSOR"
                    ]
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "deploy devices",
            "description": "Deploy devices that are ready to deploy",
            "type": "generic",
            "identifier": "deploy_devices",
            "read_only": true,
            "parameters": {
                "devices": {
                    "description": "Device IDs of devices to deploy changes to. If left empty all devices with configuration changes will deploy",
                    "data_type": "string",
                    "order": 0
                },
                "domain_name": {
                    "description": "Firepower Domain. If none is specified the default domain will be queried",
                    "data_type": "string",
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.devices",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.domain_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.type",
                    "data_type": "string",
                    "example_values": [
                        "DeploymentRequest"
                    ]
                },
                {
                    "data_path": "action_result.data.*.version",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.task.id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.metadata.task.links.self",
                    "data_type": "string",
                    "example_values": [
                        "https://hostname/api/fmc_config/v1/domain/default/job/taskstatuses/77309722217"
                    ]
                },
                {
                    "data_path": "action_result.data.*.deviceList.*",
                    "data_type": "string"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "get deployment status",
            "description": "Get status of a deployment",
            "type": "investigate",
            "identifier": "get_deployment_status",
            "read_only": true,
            "parameters": {
                "deployment_id": {
                    "description": "Id of the deployment",
                    "data_type": "string",
                    "order": 0,
                    "required": true
                },
                "domain_name": {
                    "description": "Firepower Domain. If none is specified the default domain will be queried",
                    "data_type": "string",
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.deployment_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.domain_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.id",
                    "data_type": "string",
                    "example_values": [
                        "DeploymentRequest"
                    ]
                },
                {
                    "data_path": "action_result.data.*.task",
                    "data_type": "string",
                    "example_values": [
                        "TaskStatus"
                    ]
                },
                {
                    "data_path": "action_result.data.*.status",
                    "data_type": "string",
                    "example_values": [
                        "Deploying",
                        "Deployed"
                    ]
                },
                {
                    "data_path": "action_result.data.*.message",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.deviceList.*",
                    "data_type": "string"
                }
            ],
            "versions": "EQ(*)"
        }
    ],
    "pip_dependencies": {
        "wheel": [
            {
                "module": "simplejson",
                "input_file": "wheels/py36/simplejson-3.17.2-cp36-cp36m-manylinux2010_x86_64.manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl"
            }
        ]
    },
    "pip39_dependencies": {
        "wheel": [
            {
                "module": "simplejson",
                "input_file": "wheels/py39/simplejson-3.17.2-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl"
            }
        ]
    }
}
